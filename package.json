{
	"name": "template",
	"version": "1.0.0",
	"description": "template for a project with a git hook for automated code formatting on git commit",
	"main": "",
	"type": "module",
	"config": {
		"code_paths": "./src/**/*.{js,jsx,json,ts}",
		"style_paths": "./src/**/*.{css,less,scss}",
		"html_paths": "./src/**/*.{html,htm}",
		"all_paths": "./src/**/*"
	},
	"scripts": {
		"prepare": "husky",
		"clean": "rimraf --glob dist/*",
		"build": "npm run clean && webpack",
		"build-test": "npm run clean && webpack --env development",
		"package": "npm run build",
		"jsdoc-gen": "jsdoc -r ./src/ -d ./jsdoc-out",
		"check-lint:code": "npx eslint %npm_package_config_code_paths% --config eslint.config.mjs",
		"check-format:code": "npx prettier %npm_package_config_code_paths% --config .prettierrc --check",
		"check-lint:style": "npx stylelint %npm_package_config_style_paths% --config .stylelint.config.mjs",
		"check-format:style": "npx prettier %npm_package_config_style_paths% --config .prettierrc --check",
		"check-format:html": "npx prettier %npm_package_config_html_paths% --config .prettierrc --check",
		"fix-lint:code": "npx eslint %npm_package_config_code_paths% --config eslint.config.mjs --cache --fix",
		"fix-lint:style": "npx stylelint %npm_package_config_style_paths% --config .stylelint.config.mjs --cache --fix",
		"format:code": "npx prettier %npm_package_config_code_paths% --config .prettierrc --write --ignore-unknown",
		"format:style": "npx prettier %npm_package_config_style_paths% --config .prettierrc --write --ignore-unknown",
		"format:html": "npx prettier %npm_package_config_html_paths% --config .prettierrc --write --ignore-unknown",
		"fix-lint:all": "npm run lint:code && npm run lint:style",
		"fix:all": "npm run format:code && npm run format:style && npm run format:html",
		"prettier-watch": "npx onchange %npm_package_config_all_paths% -- prettier --config .prettierrc --check --ignore-unknown {{changed}}",
		"stylelint-watch": "npx onchange %npm_package_config_all_paths% -- npm run check-lint:style {{changed}}",
		"test": "echo Pre-commit hook test (\".husky/pre-commit\"); edit me to enable \"lint-staged\""
	},
	"author": "",
	"license": "ISC",
	"devDependencies": {
		"@babel/core": "^7.24.6",
		"@babel/preset-env": "^7.24.6",
		"@eslint/compat": "^1.0.1",
		"babel-loader": "^9.1.3",
		"copy-webpack-plugin": "^12.0.2",
		"eslint": "^8.57.0",
		"eslint-config-prettier": "^9.1.0",
		"eslint-config-standard": "^17.1.0",
		"husky": "^9.0.11",
		"jsdoc": "^4.0.3",
		"onchange": "^7.1.0",
		"prettier": "^3.2.5",
		"rimraf": "^5.0.7",
		"stylelint": "^16.5.0",
		"terser-webpack-plugin": "^5.3.10",
		"webpack": "^5.91.0",
		"webpack-cli": "^5.1.4",
		"zip-webpack-plugin": "^4.0.1"
	},
	"husky": {
		"hooks": {
			"pre-commit": "lint-staged"
		}
	},
	"lint-staged": {
		"./src/**/*.{js,jsx,json,ts}": [
			"eslint --config eslint.config.mjs --quiet --cache --fix",
			"prettier --config .prettierrc --write --ignore-unknown",
			"git add"
		],
		"./src/**/*.{css,less,scss}": [
			"stylelint --config .stylelint.config.mjs --cache --fix",
			"prettier --config .prettierrc --write --ignore-unknown",
			"git add"
		],
		"./src/**/*.{html,htm}": [
			"prettier --config .prettierrc --write --ignore-unknown",
			"git add"
		]
	}
}
